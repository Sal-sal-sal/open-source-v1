#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ endpoints –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Ä–æ—É—Ç–µ—Ä–æ–≤.
"""

import requests
import json

API_BASE_URL = "http://localhost:8000"

def test_endpoint_availability():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö endpoints"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å endpoints...")
    print("=" * 50)
    
    endpoints_to_test = [
        "/docs",  # Swagger UI
        "/api/notes/",  # Structured notes
        "/api/voice-notes/create-from-voice-message/",  # Voice notes
        "/api/audio/transcript/",  # Audio transcription
    ]
    
    for endpoint in endpoints_to_test:
        try:
            url = f"{API_BASE_URL}{endpoint}"
            print(f"üì° –¢–µ—Å—Ç–∏—Ä—É—é: {endpoint}")
            
            if endpoint == "/docs":
                # GET request –¥–ª—è docs
                response = requests.get(url)
            else:
                # POST request –¥–ª—è API endpoints (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401 –±–µ–∑ —Ç–æ–∫–µ–Ω–∞)
                response = requests.post(url)
            
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                print("   ‚úÖ Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω")
            elif response.status_code == 401:
                print("   ‚úÖ Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)")
            elif response.status_code == 405:
                print("   ‚ùå Method Not Allowed - –ø—Ä–æ–±–ª–µ–º–∞ —Å –º–µ—Ç–æ–¥–æ–º")
            elif response.status_code == 404:
                print("   ‚ùå Not Found - endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"   ‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")
        
        print()
    
    print("=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

def test_router_registration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ä–æ—É—Ç–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã"""
    print("üîß –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–æ—É—Ç–µ—Ä–æ–≤...")
    print("=" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º OpenAPI —Å—Ö–µ–º—É
        response = requests.get(f"{API_BASE_URL}/openapi.json")
        if response.status_code == 200:
            openapi_spec = response.json()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏
            paths = openapi_spec.get("paths", {})
            
            # –ò—â–µ–º –ø—É—Ç–∏ –¥–ª—è –∑–∞–º–µ—Ç–æ–∫
            notes_paths = [path for path in paths.keys() if "notes" in path]
            voice_notes_paths = [path for path in paths.keys() if "voice-notes" in path]
            
            print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ –ø—É—Ç–µ–π —Å 'notes': {len(notes_paths)}")
            for path in notes_paths:
                print(f"   - {path}")
            
            print(f"üé§ –ù–∞–π–¥–µ–Ω–æ –ø—É—Ç–µ–π —Å 'voice-notes': {len(voice_notes_paths)}")
            for path in voice_notes_paths:
                print(f"   - {path}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ endpoints
            required_endpoints = [
                "/api/notes/",
                "/api/voice-notes/create-from-voice-message/",
                "/api/voice-notes/create-from-voice-and-transcript/",
                "/api/voice-notes/create-from-transcript/",
            ]
            
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ endpoints:")
            for endpoint in required_endpoints:
                if endpoint in paths:
                    print(f"   ‚úÖ {endpoint}")
                else:
                    print(f"   ‚ùå {endpoint} - –ù–ï –ù–ê–ô–î–ï–ù")
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å OpenAPI —Å—Ö–µ–º—É")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–æ—É—Ç–µ—Ä–æ–≤: {str(e)}")
    
    print("=" * 50)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ endpoints –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Ä–æ—É—Ç–µ—Ä–æ–≤")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get(f"{API_BASE_URL}/docs")
        if response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ö†Ô∏è  API —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API: {str(e)}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
        return
    
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoints
    test_endpoint_availability()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–æ—É—Ç–µ—Ä–æ–≤
    test_router_registration()
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print("=" * 60)
    
    print("\nüí° –ï—Å–ª–∏ –≤—Å–µ endpoints –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç ‚úÖ, —Ç–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Ä–æ—É—Ç–µ—Ä–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
    print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫ –∏–∑ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")

if __name__ == "__main__":
    main() 